"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.View = exports.SortBy = exports.PositionIndicator = exports.OptionLevel = exports.InstitutionType = exports.AccountType = exports.AccountStatus = exports.SortOrder = exports.QuoteMode = exports.MarketSession = void 0;
/**
 * @file Accounts Enums.
 */
var enums_1 = require("../enums");
Object.defineProperty(exports, "MarketSession", { enumerable: true, get: function () { return enums_1.MarketSession; } });
Object.defineProperty(exports, "QuoteMode", { enumerable: true, get: function () { return enums_1.QuoteMode; } });
Object.defineProperty(exports, "SortOrder", { enumerable: true, get: function () { return enums_1.SortOrder; } });
var AccountStatus;
(function (AccountStatus) {
    AccountStatus["ACTIVE"] = "ACTIVE";
    AccountStatus["CLOSED"] = "CLOSED";
})(AccountStatus = exports.AccountStatus || (exports.AccountStatus = {}));
var AccountType;
(function (AccountType) {
    AccountType["AMMCHK"] = "AMMCHK";
    AccountType["ARO"] = "ARO";
    AccountType["BCHK"] = "BCHK";
    AccountType["BENF_ESTATE_IRA"] = "BENF_ESTATE_IRA";
    AccountType["BENF_MINOR_IRA"] = "BENF_MINOR_IRA";
    AccountType["BENF_ROTH_ESTATE_IRA"] = "BENF_ROTH_ESTATE_IRA";
    AccountType["BENF_ROTH_MINOR_IRA"] = "BENF_ROTH_MINOR_IRA";
    AccountType["BENF_ROTH_TRUST_IRA"] = "BENF_ROTH_TRUST_IRA";
    AccountType["BENF_TRUST_IRA"] = "BENF_TRUST_IRA";
    AccountType["BENFIRA"] = "BENFIRA";
    AccountType["BENFROTHIRA"] = "BENFROTHIRA";
    AccountType["BRKCD"] = "BRKCD";
    AccountType["BROKER"] = "BROKER";
    AccountType["C_CORP"] = "C_CORP";
    AccountType["CASH"] = "CASH";
    AccountType["COMM_PROP"] = "COMM_PROP";
    AccountType["CONSERVATOR"] = "CONSERVATOR";
    AccountType["CONTRIBUTORY"] = "CONTRIBUTORY";
    AccountType["CONVERSION_ROTH_IRA"] = "CONVERSION_ROTH_IRA";
    AccountType["CORPORATION"] = "CORPORATION";
    AccountType["COVERDELL_ESA"] = "COVERDELL_ESA";
    AccountType["CREDITCARD"] = "CREDITCARD";
    AccountType["CSA"] = "CSA";
    AccountType["CUSTODIAL"] = "CUSTODIAL";
    AccountType["DVP"] = "DVP";
    AccountType["EMPCHK"] = "EMPCHK";
    AccountType["EMPMMCA"] = "EMPMMCA";
    AccountType["ESTATE"] = "ESTATE";
    AccountType["ETCHK"] = "ETCHK";
    AccountType["ETMMCHK"] = "ETMMCHK";
    AccountType["HEIL"] = "HEIL";
    AccountType["HELOC"] = "HELOC";
    AccountType["INDCHK"] = "INDCHK";
    AccountType["INDIVIDUAL_K"] = "INDIVIDUAL_K";
    AccountType["INDIVIDUAL"] = "INDIVIDUAL";
    AccountType["INVCLUB_C_CORP"] = "INVCLUB_C_CORP";
    AccountType["INVCLUB_LLC_C_CORP"] = "INVCLUB_LLC_C_CORP";
    AccountType["INVCLUB_LLC_PARTNERSHIP"] = "INVCLUB_LLC_PARTNERSHIP";
    AccountType["INVCLUB_LLC_S_CORP"] = "INVCLUB_LLC_S_CORP";
    AccountType["INVCLUB_PARTNERSHIP"] = "INVCLUB_PARTNERSHIP";
    AccountType["INVCLUB_S_CORP"] = "INVCLUB_S_CORP";
    AccountType["INVCLUB_TRUST"] = "INVCLUB_TRUST";
    AccountType["INVCLUB"] = "INVCLUB";
    AccountType["IRA_ROLLOVER"] = "IRA_ROLLOVER";
    AccountType["IRA"] = "IRA";
    AccountType["IRACD"] = "IRACD";
    AccountType["JOINT"] = "JOINT";
    AccountType["JTTEN"] = "JTTEN";
    AccountType["JTWROS"] = "JTWROS";
    AccountType["LLC_C_CORP"] = "LLC_C_CORP";
    AccountType["LLC_PARTNERSHIP"] = "LLC_PARTNERSHIP";
    AccountType["LLC_S_CORP"] = "LLC_S_CORP";
    AccountType["LLP_C_CORP"] = "LLP_C_CORP";
    AccountType["LLP_S_CORP"] = "LLP_S_CORP";
    AccountType["LLP"] = "LLP";
    AccountType["MARGIN"] = "MARGIN";
    AccountType["MONEY_PURCHASE"] = "MONEY_PURCHASE";
    AccountType["MRCHK"] = "MRCHK";
    AccountType["MUTUAL_FUND"] = "MUTUAL_FUND";
    AccountType["NON_PROFIT"] = "NON_PROFIT";
    AccountType["NONCUSTODIAL"] = "NONCUSTODIAL";
    AccountType["OTHER"] = "OTHER";
    AccountType["PARTNER"] = "PARTNER";
    AccountType["PARTNERSHIP_C_CORP"] = "PARTNERSHIP_C_CORP";
    AccountType["PARTNERSHIP_S_CORP"] = "PARTNERSHIP_S_CORP";
    AccountType["PARTNERSHIP"] = "PARTNERSHIP";
    AccountType["PDT_ACCOUNT"] = "PDT_ACCOUNT";
    AccountType["PM_ACCOUNT"] = "PM_ACCOUNT";
    AccountType["PREFCD"] = "PREFCD";
    AccountType["PREFIRACD"] = "PREFIRACD";
    AccountType["PROFIT_SHARING"] = "PROFIT_SHARING";
    AccountType["PROPRIETARY"] = "PROPRIETARY";
    AccountType["REGCD"] = "REGCD";
    AccountType["ROTH_INDIVIDUAL_K"] = "ROTH_INDIVIDUAL_K";
    AccountType["ROTH_IRA_MINORS"] = "ROTH_IRA_MINORS";
    AccountType["ROTHIRA"] = "ROTHIRA";
    AccountType["S_CORP"] = "S_CORP";
    AccountType["SARSEPIRA"] = "SARSEPIRA";
    AccountType["SEPIRA"] = "SEPIRA";
    AccountType["SIMPLE_IRA"] = "SIMPLE_IRA";
    AccountType["TIC"] = "TIC";
    AccountType["TRD_IRA_MINORS"] = "TRD_IRA_MINORS";
    AccountType["TRUST"] = "TRUST";
    AccountType["VARCD"] = "VARCD";
    AccountType["VARIRACD"] = "VARIRACD";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
var InstitutionType;
(function (InstitutionType) {
    InstitutionType["AUTO"] = "AUTO";
    InstitutionType["AUTOLOAN"] = "AUTOLOAN";
    InstitutionType["BETA"] = "BETA";
    InstitutionType["BROKERAGE"] = "BROKERAGE";
    InstitutionType["CC_BALANCETRANSFER"] = "CC_BALANCETRANSFER";
    InstitutionType["EXTERNAL"] = "EXTERNAL";
    InstitutionType["FUTURES"] = "FUTURES";
    InstitutionType["GANIS"] = "GANIS";
    InstitutionType["GENPACT"] = "GENPACT";
    InstitutionType["GENPACT_LEAD"] = "GENPACT_LEAD";
    InstitutionType["GLOBALTRADING"] = "GLOBALTRADING";
    InstitutionType["HEIL"] = "HEIL";
    InstitutionType["HELOC"] = "HELOC";
    InstitutionType["LENDING"] = "LENDING";
    InstitutionType["LOYALTY"] = "LOYALTY";
    InstitutionType["MORTGAGE"] = "MORTGAGE";
    InstitutionType["NONUS"] = "NONUS";
    InstitutionType["ONTRACK"] = "ONTRACK";
    InstitutionType["RJO"] = "RJO";
    InstitutionType["SBASKET"] = "SBASKET";
    InstitutionType["STOCKPLAN"] = "STOCKPLAN";
    InstitutionType["VISA"] = "VISA";
    InstitutionType["WDBH"] = "WDBH";
})(InstitutionType = exports.InstitutionType || (exports.InstitutionType = {}));
var OptionLevel;
(function (OptionLevel) {
    OptionLevel["LEVEL_1"] = "LEVEL_1";
    OptionLevel["LEVEL_2"] = "LEVEL_2";
    OptionLevel["LEVEL_3"] = "LEVEL_3";
    OptionLevel["LEVEL_4"] = "LEVEL_4";
    OptionLevel["NO_OPTIONS"] = "NO_OPTIONS";
})(OptionLevel = exports.OptionLevel || (exports.OptionLevel = {}));
var PositionIndicator;
(function (PositionIndicator) {
    PositionIndicator["TYPE1"] = "TYPE1";
    PositionIndicator["TYPE2"] = "TYPE2";
    PositionIndicator["TYPE5"] = "TYPE5";
    PositionIndicator["UNDEFINED"] = "UNDEFINED";
})(PositionIndicator = exports.PositionIndicator || (exports.PositionIndicator = {}));
var SortBy;
(function (SortBy) {
    SortBy["ADJ_NONADJ_FLAG"] = "ADJ_NONADJ_FLAG";
    SortBy["AFTER_HOURS_PCTCHANGE"] = "AFTER_HOURS_PCTCHANGE";
    SortBy["ANNUAL_DIV"] = "ANNUAL_DIV";
    SortBy["ASK_SIZE"] = "ASK_SIZE";
    SortBy["ASK"] = "ASK";
    SortBy["BASE_SYMBOL_PRICE"] = "BASE_SYMBOL_PRICE";
    SortBy["BETA"] = "BETA";
    SortBy["BI"] = "BI";
    SortBy["BID_ASK_SPREAD"] = "BID_ASK_SPREAD";
    SortBy["BID_SIZE"] = "BID_SIZE";
    SortBy["COMMISSION"] = "COMMISSION";
    SortBy["COST_PERSHARE"] = "COST_PERSHARE";
    SortBy["CURRENCY"] = "CURRENCY";
    SortBy["DATE_ACQUIRED"] = "DATE_ACQUIRED";
    SortBy["DAYS_EXPIRATION"] = "DAYS_EXPIRATION";
    SortBy["DAYS_GAIN_PCT"] = "DAYS_GAIN_PCT";
    SortBy["DAYS_GAIN"] = "DAYS_GAIN";
    SortBy["DAYS_RANGE"] = "DAYS_RANGE";
    SortBy["DELIVERABLES"] = "DELIVERABLES";
    SortBy["DELTA_52WK_HI"] = "DELTA_52WK_HI";
    SortBy["DELTA_52WK_LOW"] = "DELTA_52WK_LOW";
    SortBy["DELTA"] = "DELTA";
    SortBy["DISPLAY_SYMBOL"] = "DISPLAY_SYMBOL";
    SortBy["DIV_PAY_DATE"] = "DIV_PAY_DATE";
    SortBy["DIV_YIELD"] = "DIV_YIELD";
    SortBy["DIVIDEND"] = "DIVIDEND";
    SortBy["EPS"] = "EPS";
    SortBy["EST_EARN"] = "EST_EARN";
    SortBy["EX_DIV_DATE"] = "EX_DIV_DATE";
    SortBy["EXCHANGE_NAME"] = "EXCHANGE_NAME";
    SortBy["EXPAND_COLLAPSE_FLAG"] = "EXPAND_COLLAPSE_FLAG";
    SortBy["EXPIRATION"] = "EXPIRATION";
    SortBy["GAMMA"] = "GAMMA";
    SortBy["HELD_AS"] = "HELD_AS";
    SortBy["INSTRINIC_VALUE"] = "INSTRINIC_VALUE";
    SortBy["IV_PCT"] = "IV_PCT";
    SortBy["LAST_TRADE_TIME"] = "LAST_TRADE_TIME";
    SortBy["LAST_TRADE"] = "LAST_TRADE";
    SortBy["LONG_OR_SHORT"] = "LONG_OR_SHORT";
    SortBy["MARGINABLE"] = "MARGINABLE";
    SortBy["MARKET_VALUE"] = "MARKET_VALUE";
    SortBy["MARKETCAP"] = "MARKETCAP";
    SortBy["OPEN_INTEREST"] = "OPEN_INTEREST";
    SortBy["OPEN"] = "OPEN";
    SortBy["OPTION_MULTIPLIER"] = "OPTION_MULTIPLIER";
    SortBy["OPTION_TYPE"] = "OPTION_TYPE";
    SortBy["OTHER_FEES"] = "OTHER_FEES";
    SortBy["PCT_OF_PORTFOLIO"] = "PCT_OF_PORTFOLIO";
    SortBy["PE_RATIO"] = "PE_RATIO";
    SortBy["PERF_12MON"] = "PERF_12MON";
    SortBy["PERF_1MON"] = "PERF_1MON";
    SortBy["PERF_3MON"] = "PERF_3MON";
    SortBy["PERF_6MON"] = "PERF_6MON";
    SortBy["PRE_DAY_VOL"] = "PRE_DAY_VOL";
    SortBy["PRE_MARKET_PCTCHANGE"] = "PRE_MARKET_PCTCHANGE";
    SortBy["PREMIUM"] = "PREMIUM";
    SortBy["PREV_CLOSE"] = "PREV_CLOSE";
    SortBy["PRICE_CHANGE_PCT"] = "PRICE_CHANGE_PCT";
    SortBy["PRICE_CHANGE"] = "PRICE_CHANGE";
    SortBy["PRICEPAID"] = "PRICEPAID";
    SortBy["QUANTITY"] = "QUANTITY";
    SortBy["RHO"] = "RHO";
    SortBy["STRIKE_PRICE"] = "STRIKE_PRICE";
    SortBy["SV_10DAY_AVG"] = "SV_10DAY_AVG";
    SortBy["SV_1MON_AVG"] = "SV_1MON_AVG";
    SortBy["SV_20DAY_AVG"] = "SV_20DAY_AVG";
    SortBy["SV_2MON_AVG"] = "SV_2MON_AVG";
    SortBy["SV_3MON_AVG"] = "SV_3MON_AVG";
    SortBy["SV_4MON_AVG"] = "SV_4MON_AVG";
    SortBy["SV_6MON_AVG"] = "SV_6MON_AVG";
    SortBy["SYMBOL_DESC"] = "SYMBOL_DESC";
    SortBy["SYMBOL"] = "SYMBOL";
    SortBy["TEN_DAY_AVG_VOL"] = "TEN_DAY_AVG_VOL";
    SortBy["THETA"] = "THETA";
    SortBy["TOTAL_COST"] = "TOTAL_COST";
    SortBy["TOTAL_GAIN_PCT"] = "TOTAL_GAIN_PCT";
    SortBy["TOTAL_GAIN"] = "TOTAL_GAIN";
    SortBy["TYPE_CODE"] = "TYPE_CODE";
    SortBy["TYPE_NAME"] = "TYPE_NAME";
    SortBy["VEGA"] = "VEGA";
    SortBy["VOLUME"] = "VOLUME";
    SortBy["WEEK_52_HIGH"] = "WEEK_52_HIGH";
    SortBy["WEEK_52_LOW"] = "WEEK_52_LOW";
    SortBy["WEEK_52_RANGE"] = "WEEK_52_RANGE";
})(SortBy = exports.SortBy || (exports.SortBy = {}));
var View;
(function (View) {
    View["COMPLETE"] = "COMPLETE";
    View["FUNDAMENTAL"] = "FUNDAMENTAL";
    View["OPTIONSWATCH"] = "OPTIONSWATCH";
    View["PERFORMANCE"] = "PERFORMANCE";
    View["QUICK"] = "QUICK";
})(View = exports.View || (exports.View = {}));
//# sourceMappingURL=enums.js.map